import{_ as n,o as a,c as s,d as e}from"./app-04d7a41c.js";const t={},p=e(`<h1 id="学习笔记" tabindex="-1"><a class="header-anchor" href="#学习笔记" aria-hidden="true">#</a> 学习笔记</h1><h2 id="强制类型转换" tabindex="-1"><a class="header-anchor" href="#强制类型转换" aria-hidden="true">#</a> 强制类型转换</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">LoginUser</span><span class="token punctuation">)</span> <span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>getUser()方法是在SecurityUtils.getLoginUser()中调用的，它用于获取当前登录用户的详细信息并返回一个LoginUser对象。而LoginUser对象中包含了SysUser对象，因此再使用getUser()方法从中获取SysUser对象。</li></ul><h2 id="springboot中三个非常重要的注解" tabindex="-1"><a class="header-anchor" href="#springboot中三个非常重要的注解" aria-hidden="true">#</a> springboot中三个非常重要的注解</h2><ul><li>@controller 控制器（注入服务）</li><li>@service 服务（注入dao）</li><li>@repository dao（注入数据源） @Mapper 通用注解（注入spring容器）</li><li>@component 通用注解（注入spring容器）</li><li>@autowired 自动注入</li></ul><h2 id="springboot生成菜单结构列表" tabindex="-1"><a class="header-anchor" href="#springboot生成菜单结构列表" aria-hidden="true">#</a> springboot生成菜单结构列表</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MenuEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">buildTree</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MenuEntity</span><span class="token punctuation">&gt;</span></span> menuList<span class="token punctuation">,</span><span class="token class-name">String</span> parentId<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MenuEntity</span><span class="token punctuation">&gt;</span></span> treeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MenuEntity</span> menu <span class="token operator">:</span> menuList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parentId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>menu<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MenuEntity</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token function">buildTree</span><span class="token punctuation">(</span>menuList<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>menu<span class="token punctuation">.</span><span class="token function">getMenuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            menu<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
            treeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> treeList<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="遍历list" tabindex="-1"><a class="header-anchor" href="#遍历list" aria-hidden="true">#</a> 遍历List</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Object</span> item <span class="token operator">:</span> arrayList<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> nginx</h2><ul><li>启动nginx服务</li></ul><blockquote><p>start nginx</p></blockquote><ul><li>重启nginx服务</li></ul><blockquote><p>nginx -s reload</p></blockquote><ul><li>停止nginx服务</li></ul><blockquote><p>nginx -s stop</p></blockquote><h2 id="final的用法" tabindex="-1"><a class="header-anchor" href="#final的用法" aria-hidden="true">#</a> <code>final</code>的用法</h2><ul><li>在Java中，<code>final</code>关键字用于修饰类、方法和变量，具有不同的含义。</li><li>对于类和方法，<code>final</code>表示这个类或方法不能被继承或重写，这是一种防止子类修改父类的行为的机制。</li><li>对于变量，<code>final</code>表示这个变量的值只能被赋值一次，并且不能再修改。这是一种常量的声明机制，在程序运行期间变量的值不会发生改变，从而提高了程序的安全性和可维护性。</li><li>在private <code>final</code> String secret = &quot;your-secret-key&quot;;这句话中，<code>final</code>修饰的是secret变量，表示这个变量的值只能被赋值一次，并且不能再修改。由于生成JWT token所使用的秘钥应该由服务端保管，并且在整个应用程序的生命周期内不应该被修改，因此使用<code>final</code>修饰secret变量可以保证这个变量的值在程序运行期间不会被改变。</li></ul><h2 id="实体类使用-component注解" tabindex="-1"><a class="header-anchor" href="#实体类使用-component注解" aria-hidden="true">#</a> 实体类使用<code>@Component</code>注解</h2><ul><li>实体类使用了<code>@Component</code>注解，这样就可以在其他类中使用<code>@Autowired</code>注解来注入实体类了。</li></ul><h2 id="java线程休眠两秒" tabindex="-1"><a class="header-anchor" href="#java线程休眠两秒" aria-hidden="true">#</a> java线程休眠两秒</h2><ul><li><code>Thread.sleep(2000);</code></li></ul><h2 id="value的用法" tabindex="-1"><a class="header-anchor" href="#value的用法" aria-hidden="true">#</a> @Value的用法</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>yml文件中配置
student<span class="token operator">:</span>
  name<span class="token operator">:</span> chp

<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${student.name}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java-jar-指定端口" tabindex="-1"><a class="header-anchor" href="#java-jar-指定端口" aria-hidden="true">#</a> java -jar 指定端口</h2><ul><li><code>java -jar xxx.jar --server.port=8081</code></li></ul><h2 id="yml文件中数组的写法" tabindex="-1"><a class="header-anchor" href="#yml文件中数组的写法" aria-hidden="true">#</a> yml文件中数组的写法</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">steps</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Pages
    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/configure<span class="token punctuation">-</span>pages@v3
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Upload artifact
    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/upload<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>artifact@v1
    <span class="token key atrule">with</span><span class="token punctuation">:</span>
      <span class="token comment"># Upload entire repository</span>
      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&#39;.&#39;</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages
    <span class="token key atrule">id</span><span class="token punctuation">:</span> deployment
    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/deploy<span class="token punctuation">-</span>pages@v2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">steps</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout<span class="token punctuation">,</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3 <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Pages<span class="token punctuation">,</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/configure<span class="token punctuation">-</span>pages@v3 <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Upload artifact<span class="token punctuation">,</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/upload<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>artifact@v1<span class="token punctuation">,</span> <span class="token key atrule">with</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&#39;.&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages<span class="token punctuation">,</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> deployment<span class="token punctuation">,</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/deploy<span class="token punctuation">-</span>pages@v2 <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),c=[p];function o(i,l){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","java.html.vue"]]);export{r as default};
